<?php
namespace App\SalesExport;
use Illuminate\Http\Request;
use Maatwebsite\Excel\Concerns\FromCollection;
use Maatwebsite\Excel\Concerns\WithHeadings;
use Maatwebsite\Excel\Concerns\WithMapping;
use Maatwebsite\Excel\Concerns\ShouldAutoSize;
use App\Models\Account\CreditNote;
use DB;
class CreditNoteDownloadExport implements FromCollection, WithHeadings, ShouldAutoSize
{
    /**
    * @return \Illuminate\Support\Collection
    */
    protected $offcie;
    function __construct($date,$Cust){
         $this->date=$date;
         $this->Cust=$Cust;
    }
    public function collection()
    {
       return CreditNote::leftjoin('customer_masters','customer_masters.id','=','CreditNote.CustId')
       ->leftjoin('InvoiceMaster','InvoiceMaster.id','=','CreditNote.InvId')
       ->leftjoin('InvoiceDetails','InvoiceDetails.InvId','=','InvoiceMaster.id')
        
       ->leftjoin('employees as EmpGenarate','CreditNote.CreatedBy','=','EmpGenarate.id')
       ->leftjoin('employees as EmpCancel','CreditNote.cancelBy','=','EmpCancel.id')
       ->leftjoin('customer_addresses','customer_addresses.id','=','CreditNote.AddressId')
       ->Select(
        "CreditNote.NodeNo",
        DB::raw("DATE_FORMAT(CreditNote.NoteDate,'%d-%m-%Y') as NoteDate"), 
        "CreditNote.CFright",
        "CreditNote.CSGST",
        "CreditNote.CCGST",
        "CreditNote.CIGST",
        "CreditNote.CTotalAmount",
        "CreditNote.Remark",
        DB::raw("DATE_FORMAT(InvoiceMaster.InvDate,'%d-%m-%Y') as InvDate"), 
        DB::raw("CONCAT(DATE_FORMAT(InvoiceMaster.FormDate,'%d-%m-%Y') ,'-',DATE_FORMAT(InvoiceMaster.ToDate,'%d-%m-%Y') ) as FormDate"), 
         DB::raw("CONCAT(customer_masters.CustomerCode ,'~',customer_masters.CustomerName) as cn"), 
        "InvoiceMaster.InvNo",
        "InvoiceMaster.InvNo as in",
        DB::raw("(CASE WHEN InvoiceMaster.Mode=1 THEN 'AIR' WHEN InvoiceMaster.Mode=2 THEN 'ROAD'
        WHEN InvoiceMaster.Mode=3 THEN 'TRAIN' WHEN InvoiceMaster.Mode=4 THEN 'COURIER' END ) as md"),
        "CreditNote.InvFright",
        "CreditNote.InvCGST",
        "CreditNote.InvSGST",
        "CreditNote.InvIGST",
       "CreditNote.InvTotalAmount",
       "InvoiceMaster.Remark as InvR",
        DB::raw("CONCAT(EmpCancel.EmployeeCode ,'~',EmpCancel.EmployeeName) as cn"), 
        DB::raw("CONCAT(EmpGenarate.EmployeeCode ,'~',EmpGenarate.EmployeeName) as gn"), 
        DB::raw("DATE_FORMAT(CreditNote.CreateAT,'%d-%m-%Y %H:%i') as CreateAT")
       )->get();
    }
    public function headings(): array
    {
        return [
            'CN No',
            'CN Date',
            'Credit Amount',
            'CGST',
            'SGST',
            'IGST',
            'CN Total',
            'CN Remarks',
            'Invoice Date',
            'Billing Period',
            'Client Name',
            'Invoice No',
            'GSTIN',
            'Mode',
            'Gross Amt',
            'CGST',
            'SGST',
            'IGST',
            'Invoice Amt',
            'Remarks',
            'CN Cancelled',
            'CN Generated By',
            'CN Generated On',
        ];
    }

}